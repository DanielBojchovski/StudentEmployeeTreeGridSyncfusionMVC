@using Syncfusion.EJ2


@section ControlsSection{
    <div class="control-section">
        @{
            var dict = new Dictionary<string, object>();
            dict.Add("number", true);
            dict.Add("min", 0);
        }
        <ejs-treegrid id="TreeGrid" dataSource="@ViewBag.dataSource" idMapping="Id" parentIdMapping="ParentId" showColumnChooser="true" height="380" allowRowDragAndDrop="true" enableHover="true" allowTextWrap="true" showColumnMenu="true" allowResizing="true" allowReordering="true" allowFiltering="true" allowSorting="true" allowPaging="true" childMapping="Children" treeColumnIndex="1" toolbar="@(new List<string>() { "ExpandAll", "CollapseAll", "Add","Edit", "Delete", "Update", "Cancel", "ExcelExport", "ColumnChooser" })" allowExcelExport="true" toolbarClick="excelExportClick" excelQueryCellInfo="excelQueryCellInfo">
            <e-treegrid-filtersettings type="Excel" hierarchyMode="Parent" mode="Immediate"></e-treegrid-filtersettings>
            <e-treegrid-pagesettings pageSizeMode="Root" pageSizes="true" pageSize="20" pageCount="4"></e-treegrid-pagesettings>
            <e-treegrid-editsettings allowAdding="true" allowEditing="true" allowDeleting="true" newRowPosition="Below" mode="Row"></e-treegrid-editsettings>
            <e-treegrid-columns>
                <e-treegrid-column field="Id" headerText="Id" isPrimaryKey="true" edit="@(new{@params=new{format="n"}})" validationRules="@(new { required=true, number=true})" textAlign="Center" width="20"></e-treegrid-column>
                <e-treegrid-column field="Name" headerText="Name" validationRules="@(new { required=true})" editType="stringedit" width="60"></e-treegrid-column>
                <e-treegrid-column field="Deadline" headerText="Deadline" validationRules="@(new { date=true})" editType="datepickeredit" textAlign="Center" format="dd-MMM-yyyy" type="date" width="40"></e-treegrid-column>
                <e-treegrid-column field="Priority" headerText="Priority" validationRules="@(new { required=true})" editType="stringedit" width="60"></e-treegrid-column>
                </e-treegrid-columns>
            </ejs-treegrid>
    </div>
    
    
    
    <script>
        var autoCompleteObj, elem;
        function create(args) {
            elem = document.createElement('input');
            return elem;
        }
        function read(args) {
            return autoCompleteObj.value;
        }
        function destroy(args) {
            return autoCompleteObj.destroy();
        }
        function write(args) {
            var treeGridObj = document.getElementById("TreeGrid").ej2_instances[0];
            autoCompleteObj = new ej.dropdowns.AutoComplete({
                dataSource: treeGridObj.grid.dataSource,
                fields: { value: 'Name' },
                value: args.rowData[args.column.field]
            });
            autoCompleteObj.appendTo(elem);
        }
        function excelExportClick(args) {
            if (args['item'].text === 'Excel Export') {
                var excelExportProperties = {
                    fileName: "NewTreeGridDocument.xlsx",
                    theme:
                    {
                        header: { fontName: 'Segoe UI', fontColor: '#db2323' },
                        record: { fontName: 'Segoe UI', fontColor: '#0d0c0c' },
                        caption: { fontName: 'Segoe UI', fontColor: '#24c912' }
                    }
                };
                var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
                treegrid.excelExport(excelExportProperties);
            }
        }
        function excelQueryCellInfo(args) {
            if (args.column.field == 'Priority') {
                if (args.value === "Critical") {
                    args.style = { backColor: '#eb3434' };
                }
            }
        }
        
    </script>
}